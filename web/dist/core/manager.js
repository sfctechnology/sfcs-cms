const Change=require("../core/change.js"),managerTemplate=require("../templates/manager.hbs"),inverseChangeMap={transform:{inverse:"transform",parseData:!0},create:{inverse:"delete"},saveForm:{inverse:"saveForm"},addMedia:{inverse:"delete"},addWidget:{inverse:"delete"},order:{inverse:"order"}};let Manager=function(e,t,a){this.parent=e,this.DOMObject=t,this.extended=!0,this.visible=a,this.changeUniqueId=0,this.changeHistory=[],this.toggleExtended=function(){this.extended=!this.extended,this.render()},this.changesToUpload=function(){for(let e=this.changeHistory.length-1;e>=0;e--)if(!this.changeHistory[e].uploaded)return!0;return!1}};Manager.prototype.addChange=function(e,t,a,r,n,{upload:i=!0,addToHistory:s=!0,updateTargetId:o=!1,updateTargetType:d=null,customRequestPath:l=null,customRequestReplace:g=null}={}){const h=this.changeUniqueId++,c=new Change(h,e,t,a,r,n);return s&&(this.changeHistory.push(c),this.render()),i?this.uploadChange(c,o,d,l,g):Promise.resolve("Change added!")},Manager.prototype.uploadChange=function(e,t,a,r,n){const i=this,s=this.parent;if(!e||e.uploaded)return Promise.reject("Change already uploaded!");e.uploading=!0;const o=null!=r?r:urlsForApi[e.target.type][e.type];let d=o.url;if(n&&(d=d.replace(n.tag,n.replace)),e.target){let t=e.target.id;(null==t||o.useMainObjectId)&&(t=s.mainObjectId),d=d.replace(":id",t)}return new Promise((function(r,n){$.ajax({url:d,type:o.type,data:e.newState}).done(function(s){if(s.success){if(e.uploaded=!0,e.uploading=!1,t)if("create"===e.type||"addWidget"===e.type)e.target.id=s.id;else if("addMedia"===e.type){e.target.id=[];for(let t=0;t<s.data.newWidgets.length;t++)e.target.id.push(s.data.newWidgets[t].widgetId)}null!=a&&(e.target.type=a),r(s)}else s.login?(window.location.href=window.location.href,location.reload(!1)):null==s.message?n(s):n(s.message);i.render()}.bind(e)).fail((function(e,t,a){console.error(e,t,a),n({jqXHR:e,textStatus:t,errorThrown:a})}))}))},Manager.prototype.revertChange=function(){if(this.changeHistory.length<=0)return Promise.reject("There are no changes in history!");const e=this,t=this.parent,a=this.changeHistory[this.changeHistory.length-1],r=inverseChangeMap[a.type].inverse,n=inverseChangeMap[a.type].parseData;return new Promise((function(i,s){if(a.uploaded){const n=urlsForApi[a.target.type][r],o=function(){let d=n.url;if(a.target){let e="";$.isArray(a.target.id)?(e=a.target.id[0],a.target.id.shift()):e=a.target.id,(null==e||n.useMainObjectId)&&(e=t.mainObjectId),d=d.replace(":id",e)}$.ajax({url:d,type:n.type,data:a.oldState}).done((function(n){n.success?$.isArray(a.target.id)&&0==a.target.id.length||$.isNumeric(a.target.id)?(e.changeHistory.pop(),"delete"===r&&t.selectObject(),i(n)):(toastr.success(n.message),o()):n.login?(window.location.href=window.location.href,location.reload(!1)):null==n.message?s(n):s(n.message)})).fail((function(e,t,a){console.error(e,t,a),s({jqXHR:e,textStatus:t,errorThrown:a})}))};o()}else{let s=a.oldState,o=t.getElementByTypeAndId(a.target.type,a.target.type+"_"+a.target.id);null!=n&&n&&(s=JSON.parse(s.regions)[0]),o[r](s,!1),e.changeHistory.pop(),i({type:r,target:a.target.type,message:"Change reverted",localRevert:!0})}}))},Manager.prototype.saveAllChanges=async function(){const e=this;if(!this.changesToUpload())return Promise.resolve("No changes to upload");let t=[];for(let a=0;a<e.changeHistory.length;a++){const r=e.changeHistory[a];r.uploaded||r.uploading||(r.uploading=!0,t.push(await e.uploadChange(r)),e.render())}return Promise.all(t)},Manager.prototype.removeAllChanges=function(e,t){const a=this;return new Promise((function(r,n){for(let r=0;r<a.changeHistory.length;r++){const n=a.changeHistory[r];n.target.type===e&&(n.target.id===t||$.isArray(n.target.id)&&n.target.id.includes(t))&&(a.changeHistory.splice(r,1),r--)}a.render(),r("All Changes Removed")}))},Manager.prototype.removeLastChange=function(){this.changeHistory.pop(),this.render()},Manager.prototype.render=function(){if(0==this.visible)return;const e=managerTemplate(this);this.DOMObject.html(e),this.DOMObject.draggable(),this.DOMObject.find("#layout-manager-header .title").click(this.toggleExtended.bind(this))},module.exports=Manager;